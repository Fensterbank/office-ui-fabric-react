export function after(style: IRawStyle): IProcessedStyle;

export function before(style: IRawStyle): IProcessedStyle;

export function fontFace(font: Glamor.FontProperties): string;

// (undocumented)
export function getClassNames < T >(styles: T): IClassNames<T>;

// (undocumented)
export function getFocusRule(theme: ITheme,
  inset: string = '0',
  color: string = theme.palette.neutralSecondary,
  position: string = 'absolute'): IStyle;

export function getTheme(): ITheme;

// (undocumented)
interface IAnimationClassNames extends IClassNames<IAnimationStyles> {
}

interface IAnimationStyles {
  // (undocumented)
  fadeIn100: IRawStyle;
  // (undocumented)
  fadeIn200: IRawStyle;
  // (undocumented)
  fadeIn400: IRawStyle;
  // (undocumented)
  fadeIn500: IRawStyle;
  // (undocumented)
  fadeOut100: IRawStyle;
  // (undocumented)
  fadeOut200: IRawStyle;
  // (undocumented)
  fadeOut400: IRawStyle;
  // (undocumented)
  fadeOut500: IRawStyle;
  // (undocumented)
  rotate90deg: IRawStyle;
  // (undocumented)
  rotateN90deg: IRawStyle;
  // (undocumented)
  scaleDownIn100: IRawStyle;
  // (undocumented)
  scaleDownOut98: IRawStyle;
  // (undocumented)
  scaleUpIn100: IRawStyle;
  // (undocumented)
  scaleUpOut103: IRawStyle;
  // (undocumented)
  slideDownIn10: IRawStyle;
  // (undocumented)
  slideDownIn20: IRawStyle;
  // (undocumented)
  slideDownOut10: IRawStyle;
  // (undocumented)
  slideDownOut20: IRawStyle;
  // (undocumented)
  slideLeftIn10: IRawStyle;
  // (undocumented)
  slideLeftIn20: IRawStyle;
  // (undocumented)
  slideLeftIn40: IRawStyle;
  // (undocumented)
  slideLeftIn400: IRawStyle;
  // (undocumented)
  slideLeftOut10: IRawStyle;
  // (undocumented)
  slideLeftOut20: IRawStyle;
  // (undocumented)
  slideLeftOut40: IRawStyle;
  // (undocumented)
  slideLeftOut400: IRawStyle;
  // (undocumented)
  slideRightIn10: IRawStyle;
  // (undocumented)
  slideRightIn20: IRawStyle;
  // (undocumented)
  slideRightIn40: IRawStyle;
  // (undocumented)
  slideRightIn400: IRawStyle;
  // (undocumented)
  slideRightOut10: IRawStyle;
  // (undocumented)
  slideRightOut20: IRawStyle;
  // (undocumented)
  slideRightOut40: IRawStyle;
  // (undocumented)
  slideRightOut400: IRawStyle;
  // (undocumented)
  slideUpIn10: IRawStyle;
  // (undocumented)
  slideUpIn20: IRawStyle;
  // (undocumented)
  slideUpOut10: IRawStyle;
  // (undocumented)
  slideUpOut20: IRawStyle;
}

// (undocumented)
interface IColorClassNames {
  // (undocumented)
  black?: string;
  // (undocumented)
  blackBackground?: string;
  // (undocumented)
  blackBackgroundHover?: string;
  // (undocumented)
  blackBorder?: string;
  // (undocumented)
  blackBorderHover?: string;
  // (undocumented)
  blackHover?: string;
  // (undocumented)
  blackTranslucent40?: string;
  // (undocumented)
  blackTranslucent40Background?: string;
  // (undocumented)
  blackTranslucent40BackgroundHover?: string;
  // (undocumented)
  blackTranslucent40Border?: string;
  // (undocumented)
  blackTranslucent40BorderHover?: string;
  // (undocumented)
  blackTranslucent40Hover?: string;
  // (undocumented)
  blue?: string;
  // (undocumented)
  blueBackground?: string;
  // (undocumented)
  blueBackgroundHover?: string;
  // (undocumented)
  blueBorder?: string;
  // (undocumented)
  blueBorderHover?: string;
  // (undocumented)
  blueDark?: string;
  // (undocumented)
  blueDarkBackground?: string;
  // (undocumented)
  blueDarkBackgroundHover?: string;
  // (undocumented)
  blueDarkBorder?: string;
  // (undocumented)
  blueDarkBorderHover?: string;
  // (undocumented)
  blueDarkHover?: string;
  // (undocumented)
  blueHover?: string;
  // (undocumented)
  blueLight?: string;
  // (undocumented)
  blueLightBackground?: string;
  // (undocumented)
  blueLightBackgroundHover?: string;
  // (undocumented)
  blueLightBorder?: string;
  // (undocumented)
  blueLightBorderHover?: string;
  // (undocumented)
  blueLightHover?: string;
  // (undocumented)
  blueMid?: string;
  // (undocumented)
  blueMidBackground?: string;
  // (undocumented)
  blueMidBackgroundHover?: string;
  // (undocumented)
  blueMidBorder?: string;
  // (undocumented)
  blueMidBorderHover?: string;
  // (undocumented)
  blueMidHover?: string;
  // (undocumented)
  green?: string;
  // (undocumented)
  greenBackground?: string;
  // (undocumented)
  greenBackgroundHover?: string;
  // (undocumented)
  greenBorder?: string;
  // (undocumented)
  greenBorderHover?: string;
  // (undocumented)
  greenDark?: string;
  // (undocumented)
  greenDarkBackground?: string;
  // (undocumented)
  greenDarkBackgroundHover?: string;
  // (undocumented)
  greenDarkBorder?: string;
  // (undocumented)
  greenDarkBorderHover?: string;
  // (undocumented)
  greenDarkHover?: string;
  // (undocumented)
  greenHover?: string;
  // (undocumented)
  greenLight?: string;
  // (undocumented)
  greenLightBackground?: string;
  // (undocumented)
  greenLightBackgroundHover?: string;
  // (undocumented)
  greenLightBorder?: string;
  // (undocumented)
  greenLightBorderHover?: string;
  // (undocumented)
  greenLightHover?: string;
  // (undocumented)
  magenta?: string;
  // (undocumented)
  magentaBackground?: string;
  // (undocumented)
  magentaBackgroundHover?: string;
  // (undocumented)
  magentaBorder?: string;
  // (undocumented)
  magentaBorderHover?: string;
  // (undocumented)
  magentaDark?: string;
  // (undocumented)
  magentaDarkBackground?: string;
  // (undocumented)
  magentaDarkBackgroundHover?: string;
  // (undocumented)
  magentaDarkBorder?: string;
  // (undocumented)
  magentaDarkBorderHover?: string;
  // (undocumented)
  magentaDarkHover?: string;
  // (undocumented)
  magentaHover?: string;
  // (undocumented)
  magentaLight?: string;
  // (undocumented)
  magentaLightBackground?: string;
  // (undocumented)
  magentaLightBackgroundHover?: string;
  // (undocumented)
  magentaLightBorder?: string;
  // (undocumented)
  magentaLightBorderHover?: string;
  // (undocumented)
  magentaLightHover?: string;
  // (undocumented)
  neutralDark?: string;
  // (undocumented)
  neutralDarkBackground?: string;
  // (undocumented)
  neutralDarkBackgroundHover?: string;
  // (undocumented)
  neutralDarkBorder?: string;
  // (undocumented)
  neutralDarkBorderHover?: string;
  // (undocumented)
  neutralDarkHover?: string;
  // (undocumented)
  neutralLight?: string;
  // (undocumented)
  neutralLightBackground?: string;
  // (undocumented)
  neutralLightBackgroundHover?: string;
  // (undocumented)
  neutralLightBorder?: string;
  // (undocumented)
  neutralLightBorderHover?: string;
  // (undocumented)
  neutralLighter?: string;
  // (undocumented)
  neutralLighterAlt?: string;
  // (undocumented)
  neutralLighterAltBackground?: string;
  // (undocumented)
  neutralLighterAltBackgroundHover?: string;
  // (undocumented)
  neutralLighterAltBorder?: string;
  // (undocumented)
  neutralLighterAltBorderHover?: string;
  // (undocumented)
  neutralLighterAltHover?: string;
  // (undocumented)
  neutralLighterBackground?: string;
  // (undocumented)
  neutralLighterBackgroundHover?: string;
  // (undocumented)
  neutralLighterBorder?: string;
  // (undocumented)
  neutralLighterBorderHover?: string;
  // (undocumented)
  neutralLighterHover?: string;
  // (undocumented)
  neutralLightHover?: string;
  // (undocumented)
  neutralPrimary?: string;
  // (undocumented)
  neutralPrimaryAlt?: string;
  // (undocumented)
  neutralPrimaryAltBackground?: string;
  // (undocumented)
  neutralPrimaryAltBackgroundHover?: string;
  // (undocumented)
  neutralPrimaryAltBorder?: string;
  // (undocumented)
  neutralPrimaryAltBorderHover?: string;
  // (undocumented)
  neutralPrimaryAltHover?: string;
  // (undocumented)
  neutralPrimaryBackground?: string;
  // (undocumented)
  neutralPrimaryBackgroundHover?: string;
  // (undocumented)
  neutralPrimaryBorder?: string;
  // (undocumented)
  neutralPrimaryBorderHover?: string;
  // (undocumented)
  neutralPrimaryHover?: string;
  // (undocumented)
  neutralQuaternary?: string;
  // (undocumented)
  neutralQuaternaryAlt?: string;
  // (undocumented)
  neutralQuaternaryAltBackground?: string;
  // (undocumented)
  neutralQuaternaryAltBackgroundHover?: string;
  // (undocumented)
  neutralQuaternaryAltBorder?: string;
  // (undocumented)
  neutralQuaternaryAltBorderHover?: string;
  // (undocumented)
  neutralQuaternaryAltHover?: string;
  // (undocumented)
  neutralQuaternaryBackground?: string;
  // (undocumented)
  neutralQuaternaryBackgroundHover?: string;
  // (undocumented)
  neutralQuaternaryBorder?: string;
  // (undocumented)
  neutralQuaternaryBorderHover?: string;
  // (undocumented)
  neutralQuaternaryHover?: string;
  // (undocumented)
  neutralSecondary?: string;
  // (undocumented)
  neutralSecondaryAlt?: string;
  // (undocumented)
  neutralSecondaryAltBackground?: string;
  // (undocumented)
  neutralSecondaryAltBackgroundHover?: string;
  // (undocumented)
  neutralSecondaryAltBorder?: string;
  // (undocumented)
  neutralSecondaryAltBorderHover?: string;
  // (undocumented)
  neutralSecondaryAltHover?: string;
  // (undocumented)
  neutralSecondaryBackground?: string;
  // (undocumented)
  neutralSecondaryBackgroundHover?: string;
  // (undocumented)
  neutralSecondaryBorder?: string;
  // (undocumented)
  neutralSecondaryBorderHover?: string;
  // (undocumented)
  neutralSecondaryHover?: string;
  // (undocumented)
  neutralTertiary?: string;
  // (undocumented)
  neutralTertiaryAlt?: string;
  // (undocumented)
  neutralTertiaryAltBackground?: string;
  // (undocumented)
  neutralTertiaryAltBackgroundHover?: string;
  // (undocumented)
  neutralTertiaryAltBorder?: string;
  // (undocumented)
  neutralTertiaryAltBorderHover?: string;
  // (undocumented)
  neutralTertiaryAltHover?: string;
  // (undocumented)
  neutralTertiaryBackground?: string;
  // (undocumented)
  neutralTertiaryBackgroundHover?: string;
  // (undocumented)
  neutralTertiaryBorder?: string;
  // (undocumented)
  neutralTertiaryBorderHover?: string;
  // (undocumented)
  neutralTertiaryHover?: string;
  // (undocumented)
  orange?: string;
  // (undocumented)
  orangeBackground?: string;
  // (undocumented)
  orangeBackgroundHover?: string;
  // (undocumented)
  orangeBorder?: string;
  // (undocumented)
  orangeBorderHover?: string;
  // (undocumented)
  orangeHover?: string;
  // (undocumented)
  orangeLight?: string;
  // (undocumented)
  orangeLightBackground?: string;
  // (undocumented)
  orangeLightBackgroundHover?: string;
  // (undocumented)
  orangeLightBorder?: string;
  // (undocumented)
  orangeLightBorderHover?: string;
  // (undocumented)
  orangeLighter?: string;
  // (undocumented)
  orangeLighterBackground?: string;
  // (undocumented)
  orangeLighterBackgroundHover?: string;
  // (undocumented)
  orangeLighterBorder?: string;
  // (undocumented)
  orangeLighterBorderHover?: string;
  // (undocumented)
  orangeLighterHover?: string;
  // (undocumented)
  orangeLightHover?: string;
  // (undocumented)
  purple?: string;
  // (undocumented)
  purpleBackground?: string;
  // (undocumented)
  purpleBackgroundHover?: string;
  // (undocumented)
  purpleBorder?: string;
  // (undocumented)
  purpleBorderHover?: string;
  // (undocumented)
  purpleDark?: string;
  // (undocumented)
  purpleDarkBackground?: string;
  // (undocumented)
  purpleDarkBackgroundHover?: string;
  // (undocumented)
  purpleDarkBorder?: string;
  // (undocumented)
  purpleDarkBorderHover?: string;
  // (undocumented)
  purpleDarkHover?: string;
  // (undocumented)
  purpleHover?: string;
  // (undocumented)
  purpleLight?: string;
  // (undocumented)
  purpleLightBackground?: string;
  // (undocumented)
  purpleLightBackgroundHover?: string;
  // (undocumented)
  purpleLightBorder?: string;
  // (undocumented)
  purpleLightBorderHover?: string;
  // (undocumented)
  purpleLightHover?: string;
  // (undocumented)
  red?: string;
  // (undocumented)
  redBackground?: string;
  // (undocumented)
  redBackgroundHover?: string;
  // (undocumented)
  redBorder?: string;
  // (undocumented)
  redBorderHover?: string;
  // (undocumented)
  redDark?: string;
  // (undocumented)
  redDarkBackground?: string;
  // (undocumented)
  redDarkBackgroundHover?: string;
  // (undocumented)
  redDarkBorder?: string;
  // (undocumented)
  redDarkBorderHover?: string;
  // (undocumented)
  redDarkHover?: string;
  // (undocumented)
  redHover?: string;
  // (undocumented)
  teal?: string;
  // (undocumented)
  tealBackground?: string;
  // (undocumented)
  tealBackgroundHover?: string;
  // (undocumented)
  tealBorder?: string;
  // (undocumented)
  tealBorderHover?: string;
  // (undocumented)
  tealDark?: string;
  // (undocumented)
  tealDarkBackground?: string;
  // (undocumented)
  tealDarkBackgroundHover?: string;
  // (undocumented)
  tealDarkBorder?: string;
  // (undocumented)
  tealDarkBorderHover?: string;
  // (undocumented)
  tealDarkHover?: string;
  // (undocumented)
  tealHover?: string;
  // (undocumented)
  tealLight?: string;
  // (undocumented)
  tealLightBackground?: string;
  // (undocumented)
  tealLightBackgroundHover?: string;
  // (undocumented)
  tealLightBorder?: string;
  // (undocumented)
  tealLightBorderHover?: string;
  // (undocumented)
  tealLightHover?: string;
  // (undocumented)
  themeDark?: string;
  // (undocumented)
  themeDarkAlt?: string;
  // (undocumented)
  themeDarkAltBackground?: string;
  // (undocumented)
  themeDarkAltBackgroundHover?: string;
  // (undocumented)
  themeDarkAltBorder?: string;
  // (undocumented)
  themeDarkAltBorderHover?: string;
  // (undocumented)
  themeDarkAltHover?: string;
  // (undocumented)
  themeDarkBackground?: string;
  // (undocumented)
  themeDarkBackgroundHover?: string;
  // (undocumented)
  themeDarkBorder?: string;
  // (undocumented)
  themeDarkBorderHover?: string;
  // (undocumented)
  themeDarker?: string;
  // (undocumented)
  themeDarkerBackground?: string;
  // (undocumented)
  themeDarkerBackgroundHover?: string;
  // (undocumented)
  themeDarkerBorder?: string;
  // (undocumented)
  themeDarkerBorderHover?: string;
  // (undocumented)
  themeDarkerHover?: string;
  // (undocumented)
  themeDarkHover?: string;
  // (undocumented)
  themeLight?: string;
  // (undocumented)
  themeLightBackground?: string;
  // (undocumented)
  themeLightBackgroundHover?: string;
  // (undocumented)
  themeLightBorder?: string;
  // (undocumented)
  themeLightBorderHover?: string;
  // (undocumented)
  themeLighter?: string;
  // (undocumented)
  themeLighterAlt?: string;
  // (undocumented)
  themeLighterAltBackground?: string;
  // (undocumented)
  themeLighterAltBackgroundHover?: string;
  // (undocumented)
  themeLighterAltBorder?: string;
  // (undocumented)
  themeLighterAltBorderHover?: string;
  // (undocumented)
  themeLighterAltHover?: string;
  // (undocumented)
  themeLighterBackground?: string;
  // (undocumented)
  themeLighterBackgroundHover?: string;
  // (undocumented)
  themeLighterBorder?: string;
  // (undocumented)
  themeLighterBorderHover?: string;
  // (undocumented)
  themeLighterHover?: string;
  // (undocumented)
  themeLightHover?: string;
  // (undocumented)
  themePrimary?: string;
  // (undocumented)
  themePrimaryBackground?: string;
  // (undocumented)
  themePrimaryBackgroundHover?: string;
  // (undocumented)
  themePrimaryBorder?: string;
  // (undocumented)
  themePrimaryBorderHover?: string;
  // (undocumented)
  themePrimaryHover?: string;
  // (undocumented)
  themeSecondary?: string;
  // (undocumented)
  themeSecondaryBackground?: string;
  // (undocumented)
  themeSecondaryBackgroundHover?: string;
  // (undocumented)
  themeSecondaryBorder?: string;
  // (undocumented)
  themeSecondaryBorderHover?: string;
  // (undocumented)
  themeSecondaryHover?: string;
  // (undocumented)
  themeTertiary?: string;
  // (undocumented)
  themeTertiaryBackground?: string;
  // (undocumented)
  themeTertiaryBackgroundHover?: string;
  // (undocumented)
  themeTertiaryBorder?: string;
  // (undocumented)
  themeTertiaryBorderHover?: string;
  // (undocumented)
  themeTertiaryHover?: string;
  // (undocumented)
  white?: string;
  // (undocumented)
  whiteBackground?: string;
  // (undocumented)
  whiteBackgroundHover?: string;
  // (undocumented)
  whiteBorder?: string;
  // (undocumented)
  whiteBorderHover?: string;
  // (undocumented)
  whiteHover?: string;
  // (undocumented)
  whiteTranslucent40?: string;
  // (undocumented)
  whiteTranslucent40Background?: string;
  // (undocumented)
  whiteTranslucent40BackgroundHover?: string;
  // (undocumented)
  whiteTranslucent40Border?: string;
  // (undocumented)
  whiteTranslucent40BorderHover?: string;
  // (undocumented)
  whiteTranslucent40Hover?: string;
  // (undocumented)
  yellow?: string;
  // (undocumented)
  yellowBackground?: string;
  // (undocumented)
  yellowBackgroundHover?: string;
  // (undocumented)
  yellowBorder?: string;
  // (undocumented)
  yellowBorderHover?: string;
  // (undocumented)
  yellowHover?: string;
  // (undocumented)
  yellowLight?: string;
  // (undocumented)
  yellowLightBackground?: string;
  // (undocumented)
  yellowLightBackgroundHover?: string;
  // (undocumented)
  yellowLightBorder?: string;
  // (undocumented)
  yellowLightBorderHover?: string;
  // (undocumented)
  yellowLightHover?: string;
}

// (undocumented)
interface IFontClassNames extends IClassNames<IFontStyles> {
}

interface IFontStyles {
  // (undocumented)
  icon?: IRawStyle;
  // (undocumented)
  large?: IRawStyle;
  // (undocumented)
  medium?: IRawStyle;
  // (undocumented)
  mediumPlus?: IRawStyle;
  // (undocumented)
  mega?: IRawStyle;
  // (undocumented)
  small?: IRawStyle;
  // (undocumented)
  smallPlus?: IRawStyle;
  // (undocumented)
  superLarge?: IRawStyle;
  // (undocumented)
  tiny?: IRawStyle;
  // (undocumented)
  xLarge?: IRawStyle;
  // (undocumented)
  xSmall?: IRawStyle;
  // (undocumented)
  xxLarge?: IRawStyle;
}

// (undocumented)
interface IIconClassNames extends IClassNames<typeof IconCodes> {
}

export function insertGlobal(selector: string, style: IRawStyle): void;

interface IPalette {
  // (undocumented)
  black?: string;
  // (undocumented)
  blackTranslucent40?: string;
  // (undocumented)
  blue?: string;
  // (undocumented)
  blueDark?: string;
  // (undocumented)
  blueLight?: string;
  // (undocumented)
  blueMid?: string;
  // (undocumented)
  green?: string;
  // (undocumented)
  greenDark?: string;
  // (undocumented)
  greenLight?: string;
  // (undocumented)
  magenta?: string;
  // (undocumented)
  magentaDark?: string;
  // (undocumented)
  magentaLight?: string;
  // (undocumented)
  neutralDark?: string;
  // (undocumented)
  neutralLight?: string;
  // (undocumented)
  neutralLighter?: string;
  // (undocumented)
  neutralLighterAlt?: string;
  // (undocumented)
  neutralPrimary?: string;
  // (undocumented)
  neutralPrimaryAlt?: string;
  // (undocumented)
  neutralQuaternary?: string;
  // (undocumented)
  neutralQuaternaryAlt?: string;
  // (undocumented)
  neutralSecondary?: string;
  // (undocumented)
  neutralSecondaryAlt?: string;
  // (undocumented)
  neutralTertiary?: string;
  // (undocumented)
  neutralTertiaryAlt?: string;
  // (undocumented)
  orange?: string;
  // (undocumented)
  orangeLight?: string;
  // (undocumented)
  orangeLighter?: string;
  // (undocumented)
  purple?: string;
  // (undocumented)
  purpleDark?: string;
  // (undocumented)
  purpleLight?: string;
  // (undocumented)
  red?: string;
  // (undocumented)
  redDark?: string;
  // (undocumented)
  teal?: string;
  // (undocumented)
  tealDark?: string;
  // (undocumented)
  tealLight?: string;
  // (undocumented)
  themeDark?: string;
  // (undocumented)
  themeDarkAlt?: string;
  // (undocumented)
  themeDarker?: string;
  // (undocumented)
  themeLight?: string;
  // (undocumented)
  themeLighter?: string;
  // (undocumented)
  themeLighterAlt?: string;
  // (undocumented)
  themePrimary?: string;
  // (undocumented)
  themeSecondary?: string;
  // (undocumented)
  themeTertiary?: string;
  // (undocumented)
  white?: string;
  // (undocumented)
  yellow?: string;
  // (undocumented)
  yellowLight?: string;
}

interface IProcessedStyle {
  toString: () => string;
}

// (undocumented)
interface IRawStyle {
  // (undocumented)
  [ key: string ]: string | number | IRawStyle;
}

// (undocumented)
interface ITheme {
  // (undocumented)
  fonts?: IFontStyles;
  // (undocumented)
  palette?: IPalette;
}

export function keyframes(timeline: Glamor.TimeLine): string;

export function loadTheme(theme: ITheme): void;

// (undocumented)
export function mergeStyles(...args: (IStyle | IRawStyle)[]): IStyle;

// (undocumented)
export function mergeStyleSets < T >(...args: T[]): T;

export function parent(selector: string, style: IRawStyle): IProcessedStyle;

// WARNING: Unsupported export: AnimationClassNames
// WARNING: Unsupported export: FontClassNames
// WARNING: Unsupported export: IconClassNames
// WARNING: Unsupported export: ColorClassNames
// WARNING: Unsupported export: AnimationStyles
// WARNING: Unsupported export: DefaultPalette
// WARNING: Unsupported export: DefaultFontStyles
// WARNING: Unsupported export: IconCodes
// WARNING: Unsupported export: IClassNames
// WARNING: Unsupported export: IStyle
// (No packageDescription for this package)
